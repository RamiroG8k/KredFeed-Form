{"version":3,"sources":["components/shared/ModeSwitcher.tsx","components/shared/InputWarning.tsx","components/shared/Dropzone.tsx","components/shared/Address.tsx","components/shared/Select.tsx","components/FirstStep.tsx","components/SecondStep.tsx","components/ThirdStep.tsx","components/FourthStep.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ModeSwitcher","useState","enabled","setEnabled","htmlClasses","document","getElementsByTagName","classList","Group","as","className","checked","onChange","contains","remove","add","InputWarning","text","Dropzone","props","multiple","rest","useDropzone","getRootProps","getInputProps","Address","register","errors","data","noun","htmlFor","id","required","type","autoComplete","defaultValue","maxLength","Select","grouped","buttonStyle","dropdownStyle","activeStyle","parentStyle","selected","setSelected","value","Button","leave","leaveFrom","leaveTo","Options","map","e","i","Option","active","selectData","FirstStep","control","unregister","calendarContainer","children","useEffect","razonSocial","nombreComercial","minLength","rfc","name","regimenFiscal","rules","render","field","nacionalidad","industria","fechaConstitucion","onBlur","dateFormat","wrapperClassName","maxDate","Date","popperPlacement","popperContainer","fechaInicioOperaciones","SecondStep","file","setFile","DropzoneField","comprobanteDomicilio","input","files","fileHandler","target","min","telefono","email","documentoIdentificacion","nombreRepresentante","generoRepresentante","fechaNacimiento","estadoNacimiento","paisNacimiento","nacionalidadRepresentante","max","curpRepresentante","rfcRepresentante","estadoCivil","emailRepresentante","telefonoRepresentante","banco","clabe","beneficiario","fechaNacimientoBeneficiario","curp","generoBeneficiario","telefonoBeneficiario","emailBeneficiario","App","step","setStep","formData","setFormData","complete","setComplete","useForm","handleSubmit","reset","formState","scrollToTop","window","scrollTo","top","behavior","CompleteCard","show","enter","enterFrom","enterTo","onClick","JSON","stringify","onSubmit","obj","usuario","ThirdStep","representanteLegal","FourthStep","stepRenderer","isValid","Object","keys","length","form","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2e705a9b.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { Switch } from '@headlessui/react';\nimport { FiMoon, FiSun } from 'react-icons/fi';\n\nconst ModeSwitcher = () => {\n    const [enabled, setEnabled] = useState<boolean>(false);\n    const htmlClasses: any = document.getElementsByTagName('html')[0].classList;\n\n    const toggleMode = () => {        \n        setEnabled(!enabled);\n        htmlClasses.contains('scheme-dark') ?\n            htmlClasses.remove('scheme-dark') :\n            htmlClasses.add('scheme-dark');\n    };\n\n    return (\n        <Switch.Group as=\"div\" className=\"flex relative\">\n            <Switch checked={enabled} onChange={toggleMode}\n                className={`${enabled ? 'bg-gray-800' : 'bg-gray-300'} relative inline-flex items-center h-6 rounded-full w-11 transition-colors focus:outline-none`}>\n                <span className={`${enabled ? 'translate-x-6' : 'translate-x-1'} inline-block w-4 h-4 transform bg-white dark:bg-gray-500 rounded-full transition-transform`} />\n            </Switch>\n\n            {enabled ? <span className=\"absolute top-1 left-1 text-gray-400\"><FiMoon /></span> :\n                <span className=\"absolute top-1 right-1 text-white\"><FiSun /></span>}\n        </Switch.Group>\n    );\n};\n\nexport default ModeSwitcher;\n","import { TiWarningOutline } from 'react-icons/ti';\n\nconst InputWarning = ({ text }: { text?: string }) => {\n    return (\n        <div className=\"text-red-400\">\n            <p className=\"absolute text-2xl right-3 bottom-9\">\n                <TiWarningOutline />\n            </p>\n            <span className=\"ml-2 mt-1 text-xs\">{text ?? 'Este campo es requerido'}</span>\n        </div>\n    );\n};\n\nexport default InputWarning;\n","import { useDropzone } from 'react-dropzone';\n\nconst Dropzone = (props: any) => {\n    const { multiple = false, onChange, ...rest } = props;\n    const { getRootProps, getInputProps } = useDropzone({ multiple, ...rest });\n\n    return (\n        <section className=\"flex\">\n            <div {...getRootProps()}\n                className=\"flex w-full border-dashed border-2 bg-yellow-500 bg-opacity-20 dark:bg-gray-600 border-yellow-400 dark:border-gray-800 input cursor-pointer\">\n                <input {...getInputProps({ onChange })} />\n                <p className=\"text-sm font-medium text-yellow-600 dark:text-gray-900\">Arrastre su archivo aqui, click para selecionarlo</p>\n            </div>\n        </section>\n    )\n}\n\nexport default Dropzone;\n","import { InputWarning } from 'components/shared';\n\nconst Address = (props: any) => {\n    const { register, errors, data, noun = '' } = props;\n    return (\n        <>\n            <div className=\"flex flex-col col-span-2 relative\">\n                <label htmlFor={`calle${noun}`} className=\"ml-2 mb-1\">Calle o Avenida principal</label>\n                <input id={`calle${noun}`}  {...register(`calle${noun}`, { required: true })} type=\"text\" autoComplete=\"off\" defaultValue={data?.[`calle${noun}`]}\n                    className={`${errors[`calle${noun}`] && 'border-2 border-red-400 dark:border-red-600'} input bg-yellow-500 bg-opacity-20 dark:bg-gray-600`} />\n                {errors[`calle${noun}`] && <InputWarning />}\n            </div>\n            <div className=\"flex flex-col relative col-span-2 sm:col-span-1\">\n                <label htmlFor={`numeroExt${noun}`} className=\"ml-2 mb-1\">Numero Exterior</label>\n                <input id={`numeroExt${noun}`} {...register(`numeroExt${noun}`, { required: true, maxLength: 6 })} type=\"text\" autoComplete=\"off\" defaultValue={data?.[`numeroExt${noun}`]}\n                    className={`${errors[`numeroExt${noun}`] && 'border-2 border-red-400 dark:border-red-600'} input bg-yellow-500 bg-opacity-20 dark:bg-gray-600`} />\n                {errors[`numeroExt${noun}`] && <InputWarning text=\"Puede contener hasta 6 caracteres\" />}\n            </div>\n            <div className=\"flex flex-col relative col-span-2 sm:col-span-1\">\n                <label htmlFor={`numeroInt${noun}`} className=\"ml-2 mb-1\">Numero Interior</label>\n                <input id={`numeroInt${noun}`} {...register(`numeroInt${noun}`, { maxLength: 6 } )} type=\"text\" autoComplete=\"off\" defaultValue={data?.[`numeroInt${noun}`]}\n                    className=\"input bg-yellow-500 bg-opacity-20 dark:bg-gray-600\" />\n            </div>\n            <div className=\"flex flex-col relative col-span-2 sm:col-span-1\">\n                <label htmlFor={`cp${noun}`} className=\"ml-2 mb-1\">Codigo postal</label>\n                <input id={`cp${noun}`} {...register(`cp${noun}`, { required: true, maxLength: 7 })} type=\"text\" autoComplete=\"off\" defaultValue={data?.[`cp${noun}`]}\n                    className={`${errors[`cp${noun}`] && 'border-2 border-red-400 dark:border-red-600'} input bg-yellow-500 bg-opacity-20 dark:bg-gray-600`} />\n                {errors[`cp${noun}`] && <InputWarning text=\"Puede contener hasta 7 caracteres\"/>}\n            </div>\n            <div className=\"flex flex-col relative col-span-2 sm:col-span-1\">\n                <label htmlFor={`colonia${noun}`} className=\"ml-2 mb-1\">Colonia o Urbanizacion</label>\n                <input id={`colonia${noun}`} {...register(`colonia${noun}`, { required: true })} type=\"text\" autoComplete=\"off\" defaultValue={data?.[`colonia${noun}`]}\n                    className={`${errors[`colonia${noun}`] && 'border-2 border-red-400 dark:border-red-600'} input bg-yellow-500 bg-opacity-20 dark:bg-gray-600`} />\n                {errors[`colonia${noun}`] && <InputWarning />}\n            </div>\n            <div className=\"flex flex-col relative col-span-2 sm:col-span-1\">\n                <label htmlFor={`municipio${noun}`} className=\"ml-2 mb-1\">Delegacion o Municipio</label>\n                <input id={`municipio${noun}`} {...register(`municipio${noun}`, { required: true })} type=\"text\" autoComplete=\"off\" defaultValue={data?.[`municipio${noun}`]}\n                    className={`${errors[`municipio${noun}`] && 'border-2 border-red-400 dark:border-red-600'} input bg-yellow-500 bg-opacity-20 dark:bg-gray-600`} />\n                {errors[`municipio${noun}`] && <InputWarning />}\n            </div>\n            <div className=\"flex flex-col relative col-span-2 sm:col-span-1\">\n                <label htmlFor={`ciudad${noun}`} className=\"ml-2 mb-1\">Ciudad o Poblacion</label>\n                <input id={`ciudad${noun}`} {...register(`ciudad${noun}`, { required: true })} type=\"text\" autoComplete=\"off\" defaultValue={data?.[`ciudad${noun}`]}\n                    className={`${errors[`ciudad${noun}`] && 'border-2 border-red-400 dark:border-red-600'} input bg-yellow-500 bg-opacity-20 dark:bg-gray-600`} />\n                {errors[`ciudad${noun}`] && <InputWarning />}\n            </div>\n            <div className=\"flex flex-col relative col-span-2 sm:col-span-1\">\n                <label htmlFor={`estado${noun}`} className=\"ml-2 mb-1\">Entidad federativa o Estado</label>\n                <input id={`estado${noun}`} {...register(`estado${noun}`, { required: true })} type=\"text\" autoComplete=\"off\" defaultValue={data?.[`estado${noun}`]}\n                    className={`${errors[`estado${noun}`] && 'border-2 border-red-400 dark:border-red-600'} input bg-yellow-500 bg-opacity-20 dark:bg-gray-600`} />\n                {errors[`estado${noun}`] && <InputWarning />}\n            </div>\n            <div className=\"flex flex-col relative col-span-2 sm:col-span-1\">\n                <label htmlFor={`pais${noun}`} className=\"ml-2 mb-1\">Pais</label>\n                <input id={`pais${noun}`} {...register(`pais${noun}`, { required: true })} type=\"text\" autoComplete=\"off\" defaultValue={data?.[`pais${noun}`]}\n                    className={`${errors[`pais${noun}`] && 'border-2 border-red-400 dark:border-red-600'} input bg-yellow-500 bg-opacity-20 dark:bg-gray-600`} />\n                {errors[`pais${noun}`] && <InputWarning />}\n            </div>\n        </>\n    )\n}\n\nexport default Address;\n","import { useState } from 'react';\nimport { CgArrowsExchangeAltV, CgCheck } from 'react-icons/cg';\nimport { Listbox, Transition } from '@headlessui/react';\n\nconst Select = (props: any) => {\n    const { grouped = false, data, onChange, defaultValue, buttonStyle, dropdownStyle, activeStyle, parentStyle } = props;\n    const [selected, setSelected] = useState(defaultValue ?? null);\n\n    const handleChange = (value: any) => {\n        onChange(value);\n        setSelected(value);\n    };\n\n    return (\n        <Listbox value={selected} onChange={handleChange}>\n            <div className={`${parentStyle} relative`}>\n                <Listbox.Button className={`${buttonStyle} relative w-full py-2 pl-3 pr-10 text-left rounded-xl cursor-default focus:outline-none focus-visible:ring-2 focus-visible:ring-opacity-75 focus-visible:ring-white focus-visible:ring-offset-orange-300 focus-visible:ring-offset-2 focus-visible:border-indigo-500 sm:text-sm`}>\n                    <span className=\"block truncate text-md\">{`${selected ?? 'Seleccionar tipo'}`}</span>\n                    <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                        <CgArrowsExchangeAltV />\n                    </span>\n                </Listbox.Button>\n                <Transition as=\"div\" leave=\"transition ease-in duration-100\"\n                    leaveFrom=\"opacity-100\" leaveTo=\"opacity-0\" >\n                    <Listbox.Options className={`${dropdownStyle} absolute w-full py-1 mt-1 overflow-auto text-base rounded-md shadow-lg max-h-60 ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm`}>\n                        {grouped ? data.map((e: any) => (\n                            <div key={e.type}>\n                                <p className=\"pl-2 bg-yellow-500 bg-opacity-50 dark:bg-gray-800\">{e.type}</p>\n                                {e.data.map((e: any, i: number) => (\n                                    <Listbox.Option key={i} className={({ active }) =>\n                                        `${active ? `${activeStyle}` : 'text-gray-900'} cursor-pointer select-none relative py-2 pl-10 pr-4`}\n                                        value={e}>\n                                        {({ selected, active }) => (\n                                            <>\n                                                <span className={`${selected ? 'font-medium' : 'font-normal'} block truncate`}>\n                                                    {e}\n                                                </span>\n                                                {selected ? (\n                                                    <span className={`${active ? 'text-amber-600' : 'text-amber-600'} absolute inset-y-0 left-0 flex items-center pl-3`}>\n                                                        <CgCheck />\n                                                    </span>\n                                                ) : null}\n                                            </>\n                                        )}\n                                    </Listbox.Option>\n                                ))}\n                            </div>\n                        )) : data.map((e: any, i: number) => (\n                            <Listbox.Option key={i} className={({ active }) =>\n                                `${active ? `${activeStyle}` : 'text-gray-900'} cursor-pointer select-none relative py-2 pl-10 pr-4`}\n                                value={e}>\n                                {({ selected, active }) => (\n                                    <>\n                                        <span className={`${selected ? 'font-medium' : 'font-normal'} block truncate`}>\n                                            {e}\n                                        </span>\n                                        {selected ? (\n                                            <span className={`${active ? 'text-amber-600' : 'text-amber-600'} absolute inset-y-0 left-0 flex items-center pl-3`}>\n                                                <CgCheck />\n                                            </span>\n                                        ) : null}\n                                    </>\n                                )}\n                            </Listbox.Option>\n                        ))}\n                    </Listbox.Options>\n                </Transition>\n            </div>\n        </Listbox>\n    )\n};\n\nexport default Select;","import { InputWarning, Select } from 'components/shared';\nimport { useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Controller } from 'react-hook-form';\n\nconst selectData = [\n    {\n        type: 'Fisica',\n        data: [\n            'Régimen de asalariados',\n            'Régimen de actividades profesionales',\n            'Régimen de arrendamiento de inmuebles',\n            'Régimen de actividad empresarial',\n            'Régimen de incorporación fiscal'\n        ]\n    }, {\n        type: 'Moral',\n        data: [\n            'Régimen general',\n            'Régimen de personas morales con fines no lucrativos',\n        ]\n    }\n];\n\nconst FirstStep = (props: any) => {\n    const { register, control, errors, data, unregister } = props;\n\n    const calendarContainer = (props: any) => {\n        const { children } = props;\n        return <div className=\"z-20\">{children}</div>\n    };\n\n    useEffect(() => {\n        unregister();\n    }, [unregister]);\n\n    return (\n        <>\n            <div className=\"ml-2 my-4\">\n                <h2 className=\"text-4xl font-medium text-gray-700 dark:text-gray-500\">\n                    Informacion General\n                </h2>\n                <p className=\"text-gray-400 mb-2\">Completa correctamente los campos para continuar con el siguiente paso</p>\n                <div className=\"rounded-full border dark:border-gray-800 w-2/3\" />\n            </div>\n            <div className=\"grid lg:grid-cols-2 gap-2 lg:gap-4\">\n                <div className=\"flex flex-col relative\">\n                    <label htmlFor=\"razonSocial\" className=\"ml-2 mb-1\">Razon social</label>\n                    <input id=\"razonSocial\" {...register(\"razonSocial\", { required: true })} type=\"text\" autoComplete=\"off\" defaultValue={data?.razonSocial}\n                        className={`${errors.razonSocial && 'border-2 border-red-400 dark:border-red-600'} input bg-yellow-500 bg-opacity-20 dark:bg-gray-600`} />\n                    {errors.razonSocial && <InputWarning />}\n                </div>\n                <div className=\"flex flex-col relative\">\n                    <label htmlFor=\"nombreComercial\" className=\"ml-2 mb-1\">Nombre comercial</label>\n                    <input id=\"nombreComercial\" {...register(\"nombreComercial\", { required: true })} type=\"text\" autoComplete=\"off\" defaultValue={data?.nombreComercial}\n                        className={`${errors.nombreComercial && 'border-2 border-red-400 dark:border-red-600'} input bg-yellow-500 bg-opacity-20 dark:bg-gray-600`} />\n                    {errors.nombreComercial && <InputWarning />}\n                </div>\n                <div className=\"flex flex-col relative\">\n                    <label htmlFor=\"rfc\" className=\"ml-2 mb-1\">RFC</label>\n                    {/* TODO Evaluar correctamente */}\n                    <input id=\"rfc\" {...register(\"rfc\", { required: true, maxLength: 13, minLength: 12 })} type=\"text\" autoComplete=\"off\" defaultValue={data?.rfc}\n                        className={`${errors.rfc && 'border-2 border-red-400 dark:border-red-600'} input uppercase bg-yellow-500 bg-opacity-20 dark:bg-gray-600`} />\n                    {errors.rfc && <InputWarning text=\"No debe ser mayor a 13 Caracteres\" />}\n                </div>\n                <div className=\"flex flex-col relative\">\n                    <label htmlFor=\"regimenFiscal\" className=\"ml-2 mb-1\">Regimen Fiscal</label>\n                    <Controller control={control} name=\"regimenFiscal\" defaultValue={data?.regimenFiscal} rules={{ required: true }}\n                        render={({ field: { onChange } }) => (\n                            <Select grouped onChange={onChange} data={selectData} defaultValue={data?.regimenFiscal}\n                                buttonStyle={`${errors.regimenFiscal ? 'border-2 border-red-400 dark:border-red-600' : ''} input bg-yellow-500 bg-opacity-20 dark:bg-gray-600`}\n                                activeStyle=\"bg-yellow-100 dark:bg-gray-800\"\n                                dropdownStyle=\"bg-white dark:bg-gray-700 dark:text-gray-500\"\n                                parentStyle=\"z-10\" />)} />\n                    {errors.regimenFiscal && <InputWarning />}\n                </div>\n                <div className=\"flex flex-col relative\">\n                    <label htmlFor=\"nacionalidad\" className=\"ml-2 mb-1\">Nacionalidad</label>\n                    <input id=\"nacionalidad\" {...register(\"nacionalidad\", { required: true })} type=\"text\" autoComplete=\"off\" defaultValue={data?.nacionalidad}\n                        className={`${errors.nacionalidad && 'border-2 border-red-400 dark:border-red-600'} input bg-yellow-500 bg-opacity-20 dark:bg-gray-600`} />\n                    {errors.nacionalidad && <InputWarning />}\n                </div>\n                <div className=\"flex flex-col relative\">\n                    <label htmlFor=\"industria\" className=\"ml-2 mb-1\">Industria</label>\n                    <input id=\"industria\" {...register(\"industria\", { required: true })} type=\"text\" autoComplete=\"off\" defaultValue={data?.industria}\n                        className={`${errors.industria && 'border-2 border-red-400 dark:border-red-600'} input bg-yellow-500 bg-opacity-20 dark:bg-gray-600`} />\n                    {errors.industria && <InputWarning />}\n                </div>\n                <div className=\"flex flex-col relative\">\n                    <label htmlFor=\"fechaConstitucion\" className=\"ml-2 mb-1\">Fecha de Constitucion</label>\n                    <Controller control={control} name=\"fechaConstitucion\" defaultValue={data?.fechaConstitucion} rules={{ required: true }}\n                        render={({ field: { onChange, onBlur, value } }) => (\n                            <DatePicker id=\"fechaConstitucion\" onChange={onChange} onBlur={onBlur} selected={value}\n                                dateFormat=\"dd, MMM yyyy\" wrapperClassName=\"w-full\" maxDate={new Date()} popperPlacement=\"top\" popperContainer={calendarContainer}\n                                className={`${errors.fechaConstitucion && 'border-2 border-red-400 dark:border-red-600'} input bg-yellow-500 bg-opacity-20 dark:bg-gray-600`} />)} />\n                    {errors.fechaConstitucion && <InputWarning />}\n                </div>\n                <div className=\"flex flex-col relative\">\n                    <label htmlFor=\"fechaInicioOperaciones\" className=\"ml-2 mb-1\">Fecha de Inicio de Operaciones</label>\n                    <Controller control={control} name=\"fechaInicioOperaciones\" defaultValue={data?.fechaInicioOperaciones} rules={{ required: true }}\n                        render={({ field: { onChange, onBlur, value } }) => (\n                            <DatePicker id=\"fechaInicioOperaciones\" onChange={onChange} onBlur={onBlur} selected={value}\n                                dateFormat=\"dd, MMM yyyy\" wrapperClassName=\"w-full\" maxDate={new Date()} popperPlacement=\"top\" popperContainer={calendarContainer}\n                                className={`${errors.fechaInicioOperaciones && 'border-2 border-red-400 dark:border-red-600'} input bg-yellow-500 bg-opacity-20 dark:bg-gray-600`} />)} />\n                    {errors.fechaInicioOperaciones && <InputWarning />}\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default FirstStep;\n","import { Address, Dropzone, InputWarning } from 'components/shared';\nimport { useEffect, useState } from 'react';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Controller } from 'react-hook-form';\n\nconst SecondStep = (props: any) => {\n    const [file, setFile] = useState<any>();\n    const { register, control, errors, data, unregister } = props;\n    // console.log(Object.values(errors).length);\n    useEffect(() => {\n        unregister();\n    }, [unregister]);\n\n    const fileHandler = (multiple: boolean, input: any) => {\n        setFile(input.files[0].name);\n        return multiple ? input.files : input.files[0];\n    };\n\n    const DropzoneField = (props: any) => {\n        const { name, multiple = false, ...rest } = props;\n\n        return (\n            <Controller name={name} control={control} defaultValue={data?.comprobanteDomicilio} rules={{ required: true }}\n                render={({ field: { onChange } }) => (\n                    <Dropzone multiple={multiple} {...rest}\n                        onChange={(e: any) => onChange(fileHandler(multiple, e.target))} />\n                )} />\n        )\n    }\n\n    return (\n        <>\n            <div className=\"ml-2 my-4\">\n                <h2 className=\"text-4xl font-medium text-gray-700 dark:text-gray-500\">\n                    Registro de Domicilio particular\n                </h2>\n                <p className=\"text-gray-400 mb-2\">Completa correctamente los campos de domicilio para continuar con el tercer paso</p>\n                <div className=\"rounded-full border dark:border-gray-800 w-2/3\" />\n            </div>\n\n            <div className=\"grid lg:grid-cols-2 gap-2 lg:gap-4\">\n                <Address data={data} register={register} control={control} errors={errors} />\n                <div className=\"flex flex-col relative col-span-2 sm:col-span-1\">\n                    <label htmlFor=\"comprobanteDomicilio\" className=\"ml-2 mb-1\">Comprobante domicilio</label>\n                    <DropzoneField name=\"comprobanteDomicilio\" />\n                    {(file || data?.comprobanteDomicilio) && <p className=\"ml-6 mt-2 text-sm list-item\">{file || data?.comprobanteDomicilio.name}</p>}\n                    {errors.comprobanteDomicilio && <InputWarning />}\n                </div>\n                <div className=\"flex flex-col relative col-span-2 sm:col-span-1\">\n                    <label htmlFor=\"telefono\" className=\"ml-2 mb-1\">Numero telefonico</label>\n                    <input id=\"telefono\" {...register(\"telefono\", { required: true, minLength: 10, maxLength: 14 })} min={10} type=\"number\" autoComplete=\"off\" defaultValue={data?.telefono}\n                        className={`${errors.telefono && 'border-2 border-red-400 dark:border-red-600'} input bg-yellow-500 bg-opacity-20 dark:bg-gray-600`} />\n                    {errors.telefono && <InputWarning text=\"Debe contener por lo menos 10 digitos\" />}\n                </div>\n                <div className=\"flex flex-col col-span-2 relative\">\n                    <label htmlFor=\"email\" className=\"ml-2 mb-1\">Correo electronico</label>\n                    <input id=\"email\" {...register(\"email\", { required: true })} type=\"email\" autoComplete=\"off\" defaultValue={data?.email}\n                        className={`${errors.email && 'border-2 border-red-400 dark:border-red-600'} input bg-yellow-500 bg-opacity-20 dark:bg-gray-600`} />\n                    {errors.email && <InputWarning />}\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default SecondStep;\n","import DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Address, Dropzone, InputWarning, Select } from 'components/shared';\nimport { useEffect, useState } from 'react';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Controller } from 'react-hook-form';\n\nconst FirstStep = (props: any) => {\n\n    const [file, setFile] = useState<any>();\n    const { register, control, errors, data, unregister } = props;\n    // console.log(Object.values(errors).length);\n\n    useEffect(() => {\n        unregister();\n    }, [unregister])\n\n    const fileHandler = (multiple: boolean, input: any) => {\n        setFile(input.files[0].name);\n        return multiple ? input.files : input.files[0];\n    };\n\n    const calendarContainer = (props: any) => {\n        const { children } = props;\n        return <div className=\"z-20\">{children}</div>\n    };\n\n    const DropzoneField = (props: any) => {\n        const { name, multiple = false, ...rest } = props;\n\n        return (\n            <Controller name={name} control={control} defaultValue={data?.documentoIdentificacion} rules={{ required: true }}\n                render={({ field: { onChange } }) => (\n                    <Dropzone multiple={multiple} {...rest}\n                        onChange={(e: any) => onChange(fileHandler(multiple, e.target))} />\n                )} />\n        )\n    }\n    return (\n        <>\n            <div className=\"ml-2 my-4\">\n                <h2 className=\"text-4xl font-medium text-gray-700 dark:text-gray-500\">\n                    Informacion del Representante legal\n                </h2>\n                <p className=\"text-gray-400 mb-2\">Completa correctamente los campos para continuar con el ultimo paso</p>\n                <div className=\"rounded-full border dark:border-gray-800 w-2/3\" />\n            </div>\n            <div className=\"grid lg:grid-cols-2 gap-2 lg:gap-4\">\n                <div className=\"flex flex-col relative col-span-2 sm:col-span-1\">\n                    <label htmlFor=\"nombreRepresentante\" className=\"ml-2 mb-1\">Nombre</label>\n                    <input id=\"nombreRepresentante\" {...register(\"nombreRepresentante\", { required: true })} type=\"text\" autoComplete=\"off\" defaultValue={data?.nombreRepresentante}\n                        className={`${errors.nombreRepresentante && 'border-2 border-red-400 dark:border-red-600'} input bg-yellow-500 bg-opacity-20 dark:bg-gray-600`} />\n                    {errors.nombreRepresentante && <InputWarning />}\n                </div>\n                <div className=\"flex flex-col relative\">\n                    <label htmlFor=\"generoRepresentante\" className=\"ml-2 mb-1\">Genero</label>\n                    <Controller control={control} name=\"generoRepresentante\" defaultValue={data?.generoRepresentante} rules={{ required: true }}\n                        render={({ field: { onChange } }) => (\n                            <Select onChange={onChange} data={['Femenino', 'Masculino']} defaultValue={data?.generoRepresentante}\n                                buttonStyle={`${errors.generoRepresentante ? 'border-2 border-red-400 dark:border-red-600' : ''} input bg-yellow-500 bg-opacity-20 dark:bg-gray-600`}\n                                activeStyle=\"bg-yellow-100 dark:bg-gray-800\"\n                                dropdownStyle=\"bg-white dark:bg-gray-700 dark:text-gray-500\"\n                                parentStyle=\"z-10\" />)} />\n                    {errors.generoRepresentante && <InputWarning />}\n                </div>\n                <div className=\"flex flex-col relative col-span-2 sm:col-span-1\">\n                    <label htmlFor=\"fechaNacimiento\" className=\"ml-2 mb-1\">Fecha de nacimiento</label>\n                    <Controller control={control} name=\"fechaNacimiento\" defaultValue={data?.fechaNacimiento} rules={{ required: true }}\n                        render={({ field: { onChange, onBlur, value } }) => (\n                            <DatePicker onChange={onChange} onBlur={onBlur} selected={value}\n                                dateFormat=\"dd, MMM yyyy\" wrapperClassName=\"w-full\" maxDate={new Date()} popperPlacement=\"top\" popperContainer={calendarContainer}\n                                className={`${errors.fechaNacimiento && 'border-2 border-red-400 dark:border-red-600'} input bg-yellow-500 bg-opacity-20 dark:bg-gray-600`} />)} />\n                    {errors.fechaNacimiento && <InputWarning />}\n                </div>\n                <div className=\"flex flex-col relative col-span-2 sm:col-span-1\">\n                    <label htmlFor=\"estadoNacimiento\" className=\"ml-2 mb-1\">Entidad federativa de nacimiento</label>\n                    <input id=\"estadoNacimiento\" {...register(\"estadoNacimiento\", { required: true })} type=\"text\" autoComplete=\"off\" defaultValue={data?.estadoNacimiento}\n                        className={`${errors.estadoNacimiento && 'border-2 border-red-400 dark:border-red-600'} input bg-yellow-500 bg-opacity-20 dark:bg-gray-600`} />\n                    {errors.estadoNacimiento && <InputWarning />}\n                </div>\n                <div className=\"flex flex-col relative col-span-2 sm:col-span-1\">\n                    <label htmlFor=\"paisNacimiento\" className=\"ml-2 mb-1\">Pais de nacimiendo</label>\n                    <input id=\"paisNacimiento\" {...register(\"paisNacimiento\", { required: true })} type=\"text\" autoComplete=\"off\" defaultValue={data?.paisNacimiento}\n                        className={`${errors.paisNacimiento && 'border-2 border-red-400 dark:border-red-600'} input bg-yellow-500 bg-opacity-20 dark:bg-gray-600`} />\n                    {errors.paisNacimiento && <InputWarning />}\n                </div>\n                <div className=\"flex flex-col relative col-span-2 sm:col-span-1\">\n                    <label htmlFor=\"nacionalidadRepresentante\" className=\"ml-2 mb-1\">Nacionalidad</label>\n                    <input id=\"nacionalidadRepresentante\" {...register(\"nacionalidadRepresentante\", { required: true })} type=\"text\" autoComplete=\"off\" defaultValue={data?.nacionalidadRepresentante}\n                        className={`${errors.nacionalidadRepresentante && 'border-2 border-red-400 dark:border-red-600'} input bg-yellow-500 bg-opacity-20 dark:bg-gray-600`} />\n                    {errors.nacionalidadRepresentante && <InputWarning />}\n                </div>\n                <div className=\"flex flex-col relative col-span-2 sm:col-span-1\">\n                    <label htmlFor=\"curpRepresentante\" className=\"ml-2 mb-1\">CURP</label>\n                    <input id=\"curpRepresentante\" {...register(\"curpRepresentante\", { required: true, minLength: 18, maxLength: 18 })} min=\"18\" max=\"18\" type=\"text\" autoComplete=\"off\" defaultValue={data?.curpRepresentante}\n                        className={`${errors.curpRepresentante && 'border-2 border-red-400 dark:border-red-600'} input uppercase bg-yellow-500 bg-opacity-20 dark:bg-gray-600`} />\n                    {errors.curpRepresentante && <InputWarning text=\"Se conforma por 18 caracteres\" />}\n                </div>\n                <div className=\"flex flex-col relative col-span-2 sm:col-span-1\">\n                    <label htmlFor=\"rfcRepresentante\" className=\"ml-2 mb-1\">RFC</label>\n                    <input id=\"rfcRepresentante\" {...register(\"rfcRepresentante\", { required: true, maxLength: 13, minLength: 12 })} type=\"text\" autoComplete=\"off\" defaultValue={data?.rfcRepresentante}\n                        className={`${errors.rfcRepresentante && 'border-2 border-red-400 dark:border-red-600'} input uppercase bg-yellow-500 bg-opacity-20 dark:bg-gray-600`} />\n                    {errors.rfcRepresentante && <InputWarning text=\"No debe ser mayor a 13 Caracteres\" />}\n                </div>\n                <div className=\"flex flex-col relative\">\n                    <label htmlFor=\"estadoCivil\" className=\"ml-2 mb-1\">Estado civil</label>\n                    <Controller control={control} name=\"estadoCivil\" defaultValue={data?.estadoCivil} rules={{ required: true }}\n                        render={({ field: { onChange } }) => (\n                            <Select onChange={onChange} data={['Casado', 'Divorciado', 'Soltero', 'Union libre', 'Viudo']} defaultValue={data?.estadoCivil}\n                                buttonStyle={`${errors.estadoCivil ? 'border-2 border-red-400 dark:border-red-600' : ''} input bg-yellow-500 bg-opacity-20 dark:bg-gray-600`}\n                                activeStyle=\"bg-yellow-100 dark:bg-gray-800\"\n                                dropdownStyle=\"bg-white dark:bg-gray-700 dark:text-gray-500\"\n                                parentStyle=\"z-10\" />)} />\n                    {errors.estadoCivil && <InputWarning />}\n                </div>\n                <div className=\"flex flex-col relative col-span-2 sm:col-span-1\">\n                    <label htmlFor=\"emailRepresentante\" className=\"ml-2 mb-1\">Correo electronico</label>\n                    <input id=\"emailRepresentante\" {...register(\"emailRepresentante\", { required: true })} type=\"email\" autoComplete=\"off\" defaultValue={data?.emailRepresentante}\n                        className={`${errors.emailRepresentante && 'border-2 border-red-400 dark:border-red-600'} input bg-yellow-500 bg-opacity-20 dark:bg-gray-600`} />\n                    {errors.emailRepresentante && <InputWarning />}\n                </div>\n                <div className=\"flex flex-col relative col-span-2 sm:col-span-1\">\n                    <label htmlFor=\"telefonoRepresentante\" className=\"ml-2 mb-1\">Telefono</label>\n                    <input id=\"telefonoRepresentante\" {...register(\"telefonoRepresentante\", { required: true, minLength: 10, maxLength: 14 })} min={10} type=\"number\" autoComplete=\"off\" defaultValue={data?.telefonoRepresentante}\n                        className={`${errors.telefonoRepresentante && 'border-2 border-red-400 dark:border-red-600'} input bg-yellow-500 bg-opacity-20 dark:bg-gray-600`} />\n                    {errors.telefonoRepresentante && <InputWarning />}\n                </div>\n                <div className=\"flex flex-col relative col-span-2 sm:col-span-1\">\n                    <label htmlFor=\"documentoIdentificacion\" className=\"ml-2 mb-1\">Documento de identificacion</label>\n                    <DropzoneField name=\"documentoIdentificacion\" />\n                    {(file || data?.documentoIdentificacion) && <p className=\"ml-6 mt-2 text-sm list-item\">{file || data?.documentoIdentificacion.name}</p>}\n                    {errors.documentoIdentificacion && <InputWarning />}\n                </div>\n                <div className=\"col-span-2 ml-2\">\n                    <h3 className=\"my-1 font-medium text-gray-700 text-2xl\">Domicilio</h3>\n                    <div className=\"border\" />\n                </div>\n                <Address data={data} register={register} control={control} errors={errors} noun=\"L\" />\n            </div>\n        </>\n    )\n}\n\nexport default FirstStep;\n","import { InputWarning, Address, Select } from 'components/shared';\nimport { useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Controller } from 'react-hook-form';\n\nconst FirstStep = (props: any) => {\n    const { register, control, errors, data, unregister } = props;\n    // console.log(Object.values(errors).length);\n    const calendarContainer = (props: any) => {\n        const { children } = props;\n        return <div className=\"z-20\">{children}</div>\n    };\n    \n    useEffect(() => {\n        unregister();\n    }, [unregister])\n\n    return (\n        <>\n            <div className=\"ml-2 my-4\">\n                <h2 className=\"text-4xl font-medium text-gray-700 dark:text-gray-500\">\n                    Informacion bancaria\n                </h2>\n                <p className=\"text-gray-400 mb-2\">Completa correctamente los campos bancarios para terminar con el formulario</p>\n                <div className=\"rounded-full border dark:border-gray-800 w-2/3\" />\n            </div>\n            <div className=\"grid lg:grid-cols-2 gap-2 lg:gap-4\">\n                <div className=\"flex flex-col relative\">\n                    <label htmlFor=\"banco\" className=\"ml-2 mb-1\">Banco</label>\n                    <input id=\"banco\" {...register(\"banco\", { required: true })} type=\"text\" autoComplete=\"off\" defaultValue={data?.banco}\n                        className={`${errors.banco && 'border-2 border-red-400 dark:border-red-600'} input bg-yellow-500 bg-opacity-20 dark:bg-gray-600`} />\n                    {errors.banco && <InputWarning />}\n                </div>\n                <div className=\"flex flex-col relative\">\n                    <label htmlFor=\"clabe\" className=\"ml-2 mb-1\">CLABE</label>\n                    <input id=\"clabe\" {...register(\"clabe\", { required: true, minLength: 18, maxLength: 18 })} type=\"number\" autoComplete=\"off\" defaultValue={data?.clabe}\n                        className={`${errors.clabe && 'border-2 border-red-400 dark:border-red-600'} input bg-yellow-500 bg-opacity-20 dark:bg-gray-600`} />\n                    {errors.clabe && <InputWarning text=\"Debe de estar formado por 18 digitos\"/>}\n                </div>\n                <div className=\"col-span-2 ml-2\">\n                    <h3 className=\"my-1 font-medium text-gray-700 text-2xl\">Beneficiario</h3>\n                    <div className=\"border\" />\n                </div>\n                <div className=\"flex flex-col relative col-span-2\">\n                    <label htmlFor=\"beneficiario\" className=\"ml-2 mb-1\">Nombre</label>\n                    <input id=\"beneficiario\" {...register(\"beneficiario\", { required: true })} type=\"text\" autoComplete=\"off\" defaultValue={data?.beneficiario}\n                        className={`${errors.beneficiario && 'border-2 border-red-400 dark:border-red-600'} input bg-yellow-500 bg-opacity-20 dark:bg-gray-600`} />\n                    {errors.beneficiario && <InputWarning />}\n                </div>\n                <div className=\"flex flex-col relative\">\n                    <label htmlFor=\"fechaNacimientoBeneficiario\" className=\"ml-2 mb-1\">Fecha de nacimiento</label>\n                    <Controller control={control} name=\"fechaNacimientoBeneficiario\" defaultValue={data?.fechaNacimientoBeneficiario} rules={{ required: true }}\n                        render={({ field: { onChange, onBlur, value } }) => (\n                            <DatePicker onChange={onChange} onBlur={onBlur} selected={value}\n                                dateFormat=\"dd, MMM yyyy\" wrapperClassName=\"w-full\" maxDate={new Date()} popperPlacement=\"top\" popperContainer={calendarContainer}\n                                className={`${errors.fechaNacimientoBeneficiario && 'border-2 border-red-400 dark:border-red-600'} input bg-yellow-500 bg-opacity-20 dark:bg-gray-600`} />)} />\n                    {errors.fechaNacimientoBeneficiario && <InputWarning />}\n                </div>\n                <div className=\"flex flex-col relative\">\n                    <label htmlFor=\"curp\" className=\"ml-2 mb-1\">CURP</label>\n                    <input id=\"curp\" {...register(\"curp\", { required: true, minLength: 18, maxLength: 18 })} min=\"18\" max=\"18\" type=\"text\" autoComplete=\"off\" defaultValue={data?.curp}\n                        className={`${errors.curp && 'border-2 border-red-400 dark:border-red-600'} input uppercase bg-yellow-500 bg-opacity-20 dark:bg-gray-600`} />\n                    {errors.curp && <InputWarning text=\"Se conforma por 18 caracteres\" />}\n                </div>\n                <div className=\"flex flex-col relative\">\n                    <label htmlFor=\"generoBeneficiario\" className=\"ml-2 mb-1\">Genero</label>\n                    <Controller control={control} name=\"generoBeneficiario\" defaultValue={data?.generoBeneficiario} rules={{ required: true }}\n                        render={({ field: { onChange } }) => (\n                            <Select onChange={onChange} data={['Femenino', 'Masculino']} defaultValue={data?.generoBeneficiario}\n                                buttonStyle={`${errors.generoBeneficiario ? 'border-2 border-red-400 dark:border-red-600' : ''} input bg-yellow-500 bg-opacity-20 dark:bg-gray-600`}\n                                activeStyle=\"bg-yellow-100 dark:bg-gray-800\"\n                                dropdownStyle=\"bg-white dark:bg-gray-700 dark:text-gray-500\"\n                                parentStyle=\"z-10\" />)} />\n                    {errors.generoBeneficiario && <InputWarning />}\n                </div>\n                <div className=\"flex flex-col relative\">\n                    <label htmlFor=\"telefonoBeneficiario\" className=\"ml-2 mb-1\">Numero de telefono</label>\n                    <input id=\"telefonoBeneficiario\" {...register(\"telefonoBeneficiario\", { required: true })} type=\"number\" autoComplete=\"off\" defaultValue={data?.telefonoBeneficiario}\n                        className={`${errors.telefonoBeneficiario && 'border-2 border-red-400 dark:border-red-600'} input bg-yellow-500 bg-opacity-20 dark:bg-gray-600`} />\n                    {errors.telefonoBeneficiario && <InputWarning />}\n                </div>\n                <div className=\"flex flex-col relative col-span-2\">\n                    <label htmlFor=\"emailBeneficiario\" className=\"ml-2 mb-1\">Correo electronico</label>\n                    <input id=\"emailBeneficiario\" {...register(\"emailBeneficiario\", { required: true })} type=\"emailBeneficiario\" autoComplete=\"off\" defaultValue={data?.emailBeneficiario}\n                        className={`${errors.emailBeneficiario && 'border-2 border-red-400 dark:border-red-600'} input bg-yellow-500 bg-opacity-20 dark:bg-gray-600`} />\n                    {errors.emailBeneficiario && <InputWarning />}\n                </div>\n                <div className=\"col-span-2 ml-2\">\n                    <h3 className=\"my-1 font-medium text-gray-700 text-2xl\">Domicilio</h3>\n                    <div className=\"border\" />\n                </div>\n                <Address data={data} register={register} control={control} errors={errors} noun=\"R\" />\n            </div>\n        </>\n    )\n}\n\nexport default FirstStep;\n","import { useState } from 'react';\nimport { FirstStep, SecondStep, ThirdStep, FourthStep } from 'components';\nimport { ModeSwitcher } from 'components/shared';\nimport { useForm } from 'react-hook-form';\nimport { BiBadgeCheck } from 'react-icons/bi';\nimport { Transition } from '@headlessui/react';\n\nfunction App() {\n    const [step, setStep] = useState(1);\n    const [formData, setFormData] = useState<any>({});\n    const [complete, setComplete] = useState<boolean>(false);\n    const { register, control, handleSubmit, unregister, reset, formState, formState: { errors } } = useForm<FormData>();\n\n    const onSubmit = (data: any) => {\n        scrollToTop();\n        if (step <= 4) {\n            const obj = step === 3 ? 'representanteLegal' : step === 4 ? 'beneficiario' : 'usuario';\n            setFormData({ ...formData, [obj]: { ...formData[obj], ...data } });\n            setStep(step + 1);\n            setComplete(step === 4);\n        }\n    };\n    \n    const stepHandler = (backwards?: boolean) => {\n        backwards ? setStep(step - 1) : setStep(step + 1);\n        scrollToTop();\n    };\n\n    const stepRenderer = () => {\n        const props = { register, control, errors, unregister };\n        switch (step) {\n            case 1: return <FirstStep data={formData?.usuario} {...props} />;\n            case 2: return <SecondStep data={formData?.usuario} {...props} />;\n            case 3: return <ThirdStep data={formData?.representanteLegal} {...props} />;\n            case 4: return <FourthStep data={formData?.beneficiario} {...props} />;\n            default: return <FirstStep data={formData?.usuario} {...props} />;\n        }\n    };\n\n    const scrollToTop = () => {\n        window.scrollTo({\n            top: 0,\n            behavior: \"smooth\"\n        });\n    }\n\n    const restart = () => {\n        reset();\n        setComplete(false);\n        setFormData({});\n        setStep(1);\n    }\n    \n    const CompleteCard = () => {\n        return (\n            <Transition show={true} as=\"div\" className=\"flex flex-col w-full sm:w-2/3 self-center\"\n                enter=\"transition-opacity duration-300\" enterFrom=\"opacity-0\" enterTo=\"opacity-100\"\n                leave=\"transition-opacity duration-300\" leaveFrom=\"opacity-100\" leaveTo=\"opacity-0\">\n                <button onClick={() => restart()}\n                className=\"bg-gray-300 my-2 p-2 w-1/2 self-center rounded-2xl\">\n                    Volver a llenar\n                </button>\n\n                <div className=\"bg-green-700 bg-opacity-50 rounded-3xl p-6\">\n                    <div className=\"flex justify-between\">\n                        <div className=\"w-2/3\">\n                            <h2 className=\"text-4xl text-white font-bold\">Listo!</h2>\n                            <h3 className=\"text-lg text-white font-medium leading-5\">Estaremos revisando tu solicitud para brindarte informacion en las proximas 24 horas</h3>\n                        </div>\n                        <p className=\"text-6xl text-white p-4\">\n                            <BiBadgeCheck />\n                        </p>\n                    </div>\n                    <div className=\"rounded-2xl bg-white bg-opacity-20 p-4 mt-6 overflow-x-scroll\">\n                        <pre className=\"text-xs\">\n                            rawdata: {JSON.stringify(formData, null, 2)}\n                        </pre>\n                    </div>\n                </div>\n            </Transition>\n        )\n    };\n\n    return (\n        <section className=\"relative flex flex-col w-screen min-h-screen bg-gray-50 dark:bg-gray-700 items-center\">\n            <div className=\"z-10 sticky top-0 bg-yellow-500 bg-opacity-90 dark:bg-gray-800 w-full sm:w-1/2 sm:rounded-b-4xl p-4 sm:p-2\">\n                <h1 className=\"text-4xl font-semibold text-center text-white\">\n                    Formulario KredFeed\n                </h1>\n            </div>\n            <div className=\"z-10 sticky right-0 top-20 py-6 bg-gray-200 dark:bg-gray-600 rounded-tl-2xl rounded-bl-2xl flex justify-center items-center self-end\">\n                <div className=\"transform -rotate-90\">\n                    <ModeSwitcher />\n                </div>\n            </div>\n            <div className=\"flex flex-col w-full sm:w-2/3 px-6 pb-20\">\n                {!complete ? <>\n                    <form id=\"form\" onSubmit={handleSubmit(onSubmit)} className=\"my-6\">\n                        {stepRenderer()}\n                    </form>\n                    {(!formState.isValid && Object.keys(errors).length > 0) && <p className=\"ml-2 mb-4 text-xs font-semibold text-red-500\">\n                        Para pasar al siguiente paso es necesario llenar los campos indicados\n                    </p>}\n                    <div className={`flex ${step > 1 ? 'justify-between gap-5' : 'justify-end'}`}>\n                        {step > 1 && <button onClick={() => stepHandler(true)}\n                            className=\"sm:w-1/4 self-center px-4 py-2 bg-gray-300 dark:bg-gray-800 dark:bg-opacity-80 btn hover:bg-gray-400 transition\">\n                            <p className=\"font-bold text-lg text-white dark:text-gray-400\">Anterior</p>\n                        </button>}\n\n                        <button form=\"form\" type=\"submit\"\n                            className=\"sm:w-1/2 self-center px-4 py-2 bg-yellow-400 dark:bg-gray-900 btn btn-animated hover:bg-yellow-500 active:bg-yellow-200\">\n                            <p className=\"font-bold text-lg text-white dark:text-gray-400\">{step < 4 ? `Siguiente paso ${step}/4` : 'Submit'}</p>\n                        </button>\n                    </div>\n                </> : <CompleteCard />}\n            </div>\n        </section>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}